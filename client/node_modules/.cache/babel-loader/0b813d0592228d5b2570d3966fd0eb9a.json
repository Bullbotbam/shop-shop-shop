{"ast":null,"code":"import { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from './actions';\nimport { useReducer } from 'react';\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(intitialState) {\n  return useReducer(reducer, intitialState);\n}","map":{"version":3,"sources":["/Users/dBull_ATX/Desktop/bootCampWork/shop-shop-shop/client/src/utils/reducers.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","useReducer","reducer","state","action","type","products","categories","currentCategory","useProductReducer","intitialState"],"mappings":"AAAA,SACCA,eADD,EAECC,iBAFD,EAGCC,uBAHD,QAIO,WAJP;AAKA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAQA,MAAM,CAACC,IAAf;AACC;AACA,SAAKP,eAAL;AACC,aAAO,EACN,GAAGK,KADG;AAENG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFJ,OAAP;AAID;;AACA,SAAKP,iBAAL;AACC,aAAO,EACN,GAAGI,KADG;AAENI,QAAAA,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;AAFN,OAAP;;AAID,SAAKP,uBAAL;AACC,aAAO,EACN,GAAGG,KADG;AAENK,QAAAA,eAAe,EAAEJ,MAAM,CAACI;AAFlB,OAAP;;AAID;AACC,aAAOL,KAAP;AAnBF;AAqBA,CAtBM;AAwBP,OAAO,SAASM,iBAAT,CAA2BC,aAA3B,EAA0C;AAChD,SAAOT,UAAU,CAACC,OAAD,EAAUQ,aAAV,CAAjB;AACA","sourcesContent":["import {\n\tUPDATE_PRODUCTS,\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n} from './actions';\nimport { useReducer } from 'react';\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\t// if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n\t\tcase UPDATE_PRODUCTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: [...action.products],\n\t\t\t};\n\t\t// if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n\t\tcase UPDATE_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.categories],\n\t\t\t};\n\t\tcase UPDATE_CURRENT_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentCategory: action.currentCategory,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function useProductReducer(intitialState) {\n\treturn useReducer(reducer, intitialState);\n}\n"]},"metadata":{},"sourceType":"module"}